services:
  app: &app
    build: .
    volumes:
      - .:/app
    ports:
      - "8501:8501"
    command: streamlit run app.py
    environment:
      - TEXTSYNTH_API_KEY
      - OPENAI_API_KEY
      - STREAMLIT_SERVER_ADDRESS
      - TENSORZERO_GATEWAY_URL

  # This will only get run in a production profile.
  #   docker compose --profile prod up
  # https://docs.github.com/en/apps/oauth-apps/building-oauth-apps/creating-an-oauth-app
  oauth2-proxy:
    profiles: [prod]
    restart: always
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.8.1
    # https://github.com/oauth2-proxy/oauth2-proxy/issues/1669
    command: >
      --email-domain=*
      --upstream=http://app:8501/
      --redirect-url=https://${DOMAIN_NAME?domain name not set}/oauth2/callback
      --http-address=0.0.0.0:8502
      --provider=github
      --github-org=dsgt-kaggle-clef
      --scope=user:email,read:org
    ports:
      - 8502:8502
    environment:
      - OAUTH2_PROXY_CLIENT_ID
      - OAUTH2_PROXY_CLIENT_SECRET
      - OAUTH2_PROXY_COOKIE_SECRET
      - DOMAIN_NAME

  # tensorzero demo setup stuff
  clickhouse:
    image: clickhouse/clickhouse-server:24.12-alpine
    environment:
      - CLICKHOUSE_USER
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT
      - CLICKHOUSE_PASSWORD
    ports:
      - "8123:8123"
    healthcheck:
      test: wget --spider --tries 1 http://${CLICKHOUSE_USER}:${CLICKHOUSE_PASSWORD}@clickhouse:8123/ping
      start_period: 30s
      start_interval: 1s
      timeout: 1s

  gateway:
    image: tensorzero/gateway
    volumes:
      - ./config:/app/config:ro
    environment:
      - TENSORZERO_CLICKHOUSE_URL
      - OPENAI_API_KEY
    ports:
      - "3000:3000"
    depends_on:
      clickhouse:
        condition: service_healthy

  ui:
    image: tensorzero/ui
    volumes:
      - ./config:/app/config:ro
    environment:
      - OPENAI_API_KEY
      - TENSORZERO_CLICKHOUSE_URL
      - TENSORZERO_GATEWAY_URL
    ports:
      - "4000:4000"
    depends_on:
      clickhouse:
        condition: service_healthy
